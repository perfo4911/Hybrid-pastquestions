{"version":3,"sources":["time-stamp.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;AACA,IAAM,QAAQ,sBAAR;;kBAES,UAAC,KAAD,EAA6B;MAArB,oEAAc,kBAAO;;AAC1C,QAAM,8BAAN,EAAsC,MAAM,SAAN,CAAtC,CAD0C;;AAG1C,MAAM,UAAU,SAAc;AAC5B,eAAW,WAAX;AACA,eAAW,WAAX;AACA,cAAU,IAAV;AACA,oBAAgB,KAAhB,EAJc;AAKb,aALa,CAAV,CAHoC;;AAU1C,QAAM,SAAN,EAAiB,OAAjB,EAV0C;;AAY1C,MAAI,CAAC,QAAQ,cAAR,EAAwB;AAC3B,UAAM,QAAN,CAAe,cAAf,GAAgC,KAAhC,CAD2B;AAE3B,YAAQ,IAAR,CAAa,mDAAb,EAAkE,MAAM,eAAN,CAAlE,CAF2B;GAA7B;;AAKA,MAAI,MAAM,QAAN,CAAe,cAAf,IAAiC,QAAQ,QAAR,EAAkB;AACrD,YAAQ,IAAR,CAAa,0DACA,+BADA,EACiC,MAAM,eAAN,CAD9C,CADqD;GAAvD;;AAKA,QAAM,cAAN,CAAqB,QAAQ,SAAR,EAAmB;AACtC,UAAM,IAAN;AACA,cAAU,QAAQ,QAAR;AACV,eAAW,KAAX;GAHF,EAtB0C;;AA4B1C,QAAM,cAAN,CAAqB,QAAQ,SAAR,EAAmB;AACtC,UAAM,IAAN;AACA,cAAU,QAAQ,QAAR;GAFZ,EA5B0C;;AAiC1C,QAAM,OAAN,CAAc,aAAd,EAA6B,UAAC,GAAD,EAAM,IAAN,EAAe;AAC1C,UAAM,aAAN,EAAqB,IAAI,OAAJ,CAArB,CAD0C;AAE1C,QAAI,IAAI,OAAJ,IAAe,IAAI,OAAJ,CAAY,aAAZ,EAA2B;AAAE,aAAO,MAAP,CAAF;KAA9C;AACA,QAAI,IAAI,QAAJ,EAAc;AAChB,YAAM,uBAAN,EAA+B,IAAI,KAAJ,CAAU,SAAV,EAAqB,QAAQ,SAAR,EAAmB,IAAI,QAAJ,CAAa,EAAb,CAAvE,CADgB;AAEhB,UAAI,QAAJ,CAAa,QAAQ,SAAR,CAAb,GAAkC,IAAI,IAAJ,EAAlC,CAFgB;KAAlB,MAGO;AACL,YAAM,iCAAN,EACM,IAAI,KAAJ,CAAU,eAAV,EAA2B,QAAQ,SAAR,EAAmB,IAAI,KAAJ,CADpD,CADK;AAGL,UAAI,IAAJ,CAAS,QAAQ,SAAR,CAAT,GAA8B,IAAI,IAAJ,EAA9B,CAHK;KAHP;AAQA,WAAO,MAAP,CAX0C;GAAf,CAA7B,CAjC0C;CAA7B;;AAgDf,OAAO,OAAP,GAAiB,QAAQ,OAAR","file":"time-stamp.js","sourcesContent":["import _debug from './debug';\nconst debug = _debug();\n\nexport default (Model, bootOptions = {}) => {\n  debug('TimeStamp mixin for Model %s', Model.modelName);\n\n  const options = Object.assign({\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt',\n    required: true,\n    validateUpsert: false, // default to turning validation off\n  }, bootOptions);\n\n  debug('options', options);\n\n  if (!options.validateUpsert) {\n    Model.settings.validateUpsert = false;\n    console.warn('%s.settings.validateUpsert was overriden to false', Model.pluralModelName);\n  }\n\n  if (Model.settings.validateUpsert && options.required) {\n    console.warn('Upserts for %s will fail when validation is turned on' +\n                 ' and time stamps are required', Model.pluralModelName);\n  }\n\n  Model.defineProperty(options.createdAt, {\n    type: Date,\n    required: options.required,\n    defaultFn: 'now',\n  });\n\n  Model.defineProperty(options.updatedAt, {\n    type: Date,\n    required: options.required,\n  });\n\n  Model.observe('before save', (ctx, next) => {\n    debug('ctx.options', ctx.options);\n    if (ctx.options && ctx.options.skipUpdatedAt) { return next(); }\n    if (ctx.instance) {\n      debug('%s.%s before save: %s', ctx.Model.modelName, options.updatedAt, ctx.instance.id);\n      ctx.instance[options.updatedAt] = new Date();\n    } else {\n      debug('%s.%s before update matching %j',\n            ctx.Model.pluralModelName, options.updatedAt, ctx.where);\n      ctx.data[options.updatedAt] = new Date();\n    }\n    return next();\n  });\n};\n\nmodule.exports = exports.default;\n"],"sourceRoot":"/Users/clarkbw/src/pi/loopback-ds-timestamp-mixin/es6"}